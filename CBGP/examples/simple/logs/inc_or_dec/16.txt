Gen		Median		MAD		Best		Div		Run Best		Code
1		104.0		20		0.076		20		mul(i, println_tap(1))
2		103.0		20		0.061		20		mul(i, println_tap(1))
3		104.0		20		0.065		20		mul(i, println_tap(1))
4		108.0		20		0.088		20		mul(i, println_tap(1))
5		108.0		20		0.134		20		mul(i, println_tap(1))
6		102.0		10		0.144		10		sub(float2int(println_tap(i)), float2int(bool2int(dec)))
7		102.0		10		0.118		10		sub(float2int(println_tap(i)), float2int(bool2int(dec)))
8		93.0		10		0.128		10		sub(float2int(println_tap(i)), float2int(bool2int(dec)))
9		60.0		10		0.116		10		sub(float2int(println_tap(i)), float2int(bool2int(dec)))
10		99.5		10		0.133		10		sub(float2int(println_tap(i)), float2int(bool2int(dec)))
11		30.0		0		0.106		0		sub(println_tap(i), float2int(add(False, sub(dec, lt(dec, True)))))
Solution found.
def inc_or_dec(i, dec):
    return sub(println_tap(i), float2int(add(False, sub(dec, lt(dec, True)))))
Simplifying genome of length 38.
Simplified to length 37.
Simplified to length 35.
Simplified to length 34.
Simplified to length 33.
Simplified to length 32.
Simplified to length 29.
Simplified to length 23.
Simplified to length 18.
Simplified to length 14.
Simplified to length 13.
Simplified to length 11.
Simplified to length 9.
Simplified to length 8.
Simplified genome: length=8 error=0
def inc_or_dec(i, dec):
    return sub(i, float2int(sub(dec, lt(dec, True))))
