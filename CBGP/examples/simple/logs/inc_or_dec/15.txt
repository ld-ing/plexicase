Gen		Median		MAD		Best		Div		Run Best		Code
1		104.0		20		0.086		20		i
2		104.0		20		0.075		20		i
3		102.0		20		0.103		20		i
4		102.0		20		0.109		20		i
5		102.0		20		0.11		20		i
6		102.0		20		0.122		20		i
7		102.0		20		0.127		20		i
8		102.0		20		0.129		20		i
9		85.5		20		0.124		20		i
10		100.0		20		0.155		20		i
11		102.0		20		0.152		20		i
12		102.0		20		0.168		20		i
13		102.0		20		0.156		20		i
14		102.0		10		0.166		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
15		102.0		10		0.188		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
16		102.0		10		0.175		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
17		102.0		10		0.174		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
18		102.0		10		0.18		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
19		102.0		10		0.209		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
20		102.0		10		0.193		10		add(abs_(if_(int2bool(dec), bool2int(eq(min_(2, 10), 3)), 1)), i)
21		102.0		0		0.191		0		sub(add(if_(int2bool(dec), bool2int(eq(2, float2int(neg(10)))), sub(3, 1)), i), print_tap(1))
Solution found.
def inc_or_dec(i, dec):
    return sub(add(if_(int2bool(dec), bool2int(eq(2, float2int(neg(10)))), sub(3, 1)), i), print_tap(1))
Simplifying genome of length 50.
Simplified to length 48.
Simplified to length 41.
Simplified to length 40.
Simplified to length 38.
Simplified to length 33.
Simplified to length 32.
Simplified to length 28.
Simplified to length 23.
Simplified to length 22.
Simplified to length 21.
Simplified to length 19.
Simplified to length 18.
Simplified to length 17.
Simplified to length 16.
Simplified to length 15.
Simplified to length 14.
Simplified to length 13.
Simplified genome: length=13 error=0
def inc_or_dec(i, dec):
    return sub(add(if_(dec, bool2int(eq(2, 10)), sub(3, 1)), i), 1)
