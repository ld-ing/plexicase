Gen		Median		MAD		Best		Div		Run Best		Code
1		32600000.0		428		0.006		428		lst
2		428.0		428		0.006		428		lst
3		428.0		425		0.011		425		do_print(filter(lambda _0: ne(int2bool(0), upper), lst), print_do(-1, upper))
4		15600246.0		425		0.027		425		do_print(filter(lambda _0: ne(int2bool(0), upper), lst), print_do(-1, upper))
5		9700261.0		262		0.058		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
6		9700261.0		262		0.069		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
7		11000201.0		262		0.079		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
8		11000201.0		262		0.073		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
9		9500270.0		262		0.074		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
10		9400265.0		262		0.071		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
11		9400265.0		262		0.075		262		filter(lambda _0: le(_0, upper), println_tap(print_do(upper, lst)))
12		7800311.0		205		0.073		205		filter(lambda _0: le(lower, _0), lst)
13		8000382.0		205		0.087		205		filter(lambda _0: le(lower, _0), lst)
14		7800311.0		205		0.079		205		filter(lambda _0: le(lower, _0), lst)
15		7800311.0		205		0.082		205		filter(lambda _0: le(lower, _0), lst)
16		7800402.0		205		0.086		205		filter(lambda _0: le(lower, _0), lst)
17		8200312.0		205		0.08		205		filter(lambda _0: le(lower, _0), lst)
18		200312.0		205		0.081		205		filter(lambda _0: le(lower, _0), lst)
19		700271.0		205		0.082		205		filter(lambda _0: le(lower, _0), lst)
20		700271.0		205		0.079		205		filter(lambda _0: le(lower, _0), lst)
21		8800386.0		205		0.081		205		filter(lambda _0: le(lower, _0), lst)
22		700271.0		205		0.075		205		filter(lambda _0: le(lower, _0), lst)
23		700271.0		205		0.095		205		filter(lambda _0: le(lower, _0), lst)
24		700271.0		205		0.085		205		filter(lambda _0: le(lower, _0), lst)
25		200199.0		205		0.083		205		filter(lambda _0: le(lower, _0), lst)
26		9650262.5		205		0.09		205		filter(lambda _0: le(lower, _0), lst)
27		9050311.0		205		0.087		205		filter(lambda _0: le(lower, _0), lst)
28		8650422.0		205		0.095		205		filter(lambda _0: le(lower, _0), lst)
29		9500270.0		205		0.096		205		filter(lambda _0: le(lower, _0), lst)
30		700271.0		205		0.087		205		filter(lambda _0: le(lower, _0), lst)
31		700271.0		205		0.093		205		filter(lambda _0: le(lower, _0), lst)
32		1000212.0		205		0.104		205		filter(lambda _0: le(lower, _0), lst)
33		700271.0		205		0.109		205		filter(lambda _0: le(lower, _0), lst)
34		700271.0		0		0.12		0		filter(lambda _0: lt(abs_(lt(_0, lower)), le(_0, upper)), print_do(print_do(in_(println_tap(lst), -1), float2int(floordiv(0, in_(lst, print_do(-1, sub(0, -1)))))), lst))
Solution found.
def filter_bounds(lst, lower, upper):
    return filter(lambda _0: lt(abs_(lt(_0, lower)), le(_0, upper)), print_do(print_do(in_(println_tap(lst), -1), float2int(floordiv(0, in_(lst, print_do(-1, sub(0, -1)))))), lst))
Simplifying genome of length 82.
Simplified to length 77.
Simplified to length 72.
Simplified to length 71.
Simplified to length 68.
Simplified to length 45.
Simplified to length 41.
Simplified to length 40.
Simplified to length 37.
Simplified to length 35.
Simplified to length 31.
Simplified to length 27.
Simplified to length 26.
Simplified to length 24.
Simplified to length 22.
Simplified to length 21.
Simplified to length 20.
Simplified to length 18.
Simplified to length 16.
Simplified to length 15.
Simplified to length 14.
Simplified to length 12.
Simplified to length 11.
Simplified genome: length=11 error=0
def filter_bounds(lst, lower, upper):
    return filter(lambda _0: lt(lt(_0, lower), le(_0, upper)), lst)
