Gen		Median		MAD		Best		Div		Run Best		Code
1		392676.0		258648		0.076		258648		print_tap(dt2.year())
2		358838.0		246733		0.061		246733		add(print_tap(dt1).year(), println_tap(365))
3		260017.0		246700		0.061		246700		add(println_tap(dt2).year(), 365)
4		261779.0		246689		0.098		246689		add(add(dt1.year(), 365), pos(2))
5		312972.0		241025		0.133		241025		add(add(print_tap(dt1).year(), println_tap(365)), 365)
6		330298.0		240640		0.191		240640		add(println_tap(dt2).second(), add(dt1.year(), mul(365, pos(2))))
7		346773.5		239287		0.223		239287		add(add(dt1.year(), println_tap(dt2).year()), neg(mul(365, println_tap(pos(2)))))
8		358754.0		239287		0.284		239287		add(add(dt1.year(), println_tap(dt2).year()), neg(mul(365, println_tap(pos(2)))))
9		358838.0		239287		0.313		239287		add(add(dt1.year(), println_tap(dt2).year()), neg(mul(365, println_tap(pos(2)))))
10		362639.0		239287		0.345		239287		add(add(dt1.year(), println_tap(dt2).year()), neg(mul(365, println_tap(pos(2)))))
11		358838.0		239287		0.327		239287		add(add(dt1.year(), println_tap(dt2).year()), neg(mul(365, println_tap(pos(2)))))
12		373980.0		239287		0.243		239287		add(add(dt1.year(), println_tap(dt2).year()), neg(mul(365, println_tap(pos(2)))))
13		392576.0		0		0.124		0		abs_(sub(dt1, dt2).days())
Solution found.
def days_between(dt1, dt1):
    return abs_(sub(dt1, dt2).days())
Simplifying genome of length 45.
Simplified to length 37.
Simplified to length 36.
Simplified to length 31.
Simplified to length 28.
Simplified to length 27.
Simplified to length 20.
Simplified to length 14.
Simplified to length 13.
Simplified to length 11.
Simplified to length 8.
Simplified to length 7.
Simplified to length 6.
Simplified to length 5.
Simplified genome: length=5 error=0
def days_between(dt1, dt2):
    return abs_(sub(dt1, dt2).days())
