Gen		Median		MAD		Best		Div		Run Best		Code
1		24400000.0		25.0		0.06		25.0		input1.istitle()
2		42.0		25.0		0.063		25.0		input1.istitle()
3		36.5		24.0		0.086		24.0		input1.upper().istitle()
4		35.0		24.0		0.129		24.0		input1.upper().istitle()
5		35.0		22.0		0.155		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
6		35.0		22.0		0.17		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
7		36.0		22.0		0.177		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
8		35.0		22.0		0.187		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
9		41.0		22.0		0.202		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
10		46.5		22.0		0.226		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
11		46.0		22.0		0.221		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
12		44.0		22.0		0.223		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
13		49.0		22.0		0.228		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
14		46.0		22.0		0.245		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
15		39.0		22.0		0.239		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
16		39.0		22.0		0.251		22.0		int2bool(lt(add(max_(-1, True), len_(input1)), len_(input2)))
17		42.0		18.0		0.267		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
18		39.5		18.0		0.255		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
19		44.5		18.0		0.238		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
20		42.0		18.0		0.226		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
21		39.0		18.0		0.237		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
22		39.0		18.0		0.219		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
23		42.5		18.0		0.241		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
24		41.0		18.0		0.252		18.0		lt(add(float2bool(-1), len_(input1.join(str_(int2float(5))))), len_(input3.lstrip_ws()))
25		45.0		17.0		0.249		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
26		56.0		17.0		0.252		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
27		43.0		17.0		0.25		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
28		43.5		17.0		0.254		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
29		41.0		17.0		0.256		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
30		50.0		17.0		0.263		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
31		52.0		17.0		0.259		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
32		42.0		17.0		0.283		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
33		43.0		17.0		0.287		17.0		le(add(-1, len_(input1.join(str_(int2float(pos(not_(input2.isalpha()))))))), len_(input3.lstrip_ws()))
34		51.5		16.0		0.278		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
35		43.0		16.0		0.276		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
36		56.0		16.0		0.287		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
37		52.0		16.0		0.278		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
38		60.5		16.0		0.284		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
39		45.0		16.0		0.28		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
40		52.0		16.0		0.274		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
41		45.0		16.0		0.294		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
42		40.5		16.0		0.277		16.0		le(add(-1, len_(input1.join(str_(ne(-1, 5))))), mul(len_(input3.lstrip_ws()), min_(bool2float(not_(input2.isdecimal())), len_(str_(input2)))))
43		44.0		13.0		0.305		13.0		and_(lt(len_(input1), len_(input2)), gt(gt(len_(input3), 15), 0.7894675008382698))
44		40.0		13.0		0.269		13.0		and_(lt(len_(input1), len_(input2)), gt(gt(len_(input3), 15), 0.7894675008382698))
45		43.0		13.0		0.303		13.0		and_(lt(len_(input1), len_(input2)), gt(gt(len_(input3), 15), 0.7894675008382698))
46		36.0		13.0		0.275		13.0		and_(lt(len_(input1), len_(input2)), gt(gt(len_(input3), 15), 0.7894675008382698))
47		40.0		13.0		0.281		13.0		and_(lt(len_(input1), len_(input2)), gt(gt(len_(input3), 15), 0.7894675008382698))
48		40.0		13.0		0.294		13.0		and_(lt(len_(input1), len_(input2)), gt(gt(len_(input3), 15), 0.7894675008382698))
49		37.0		9.0		0.29		9.0		lt(abs_(add(-1, len_(input1.capitalize().join(str_(str_(-1)))))), min_(len_(input3), len_(input2)))
50		42.0		9.0		0.281		9.0		lt(abs_(add(-1, len_(input1.capitalize().join(str_(str_(-1)))))), min_(len_(input3), len_(input2)))
51		42.0		9.0		0.286		9.0		lt(abs_(add(-1, len_(input1.capitalize().join(str_(str_(-1)))))), min_(len_(input3), len_(input2)))
52		47.0		8.0		0.269		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
53		53.0		8.0		0.293		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
54		44.5		8.0		0.31		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
55		43.5		8.0		0.29		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
56		63.5		8.0		0.307		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
57		43.0		8.0		0.285		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
58		44.0		8.0		0.268		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
59		49.0		8.0		0.29		8.0		lt(abs_(add(-1, len_(add(str_(-1), input1.title()).capitalize().capitalize()))), min_(len_(input3), add(len_(input2), 1)))
60		46.0		2.0		0.274		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
61		32.0		2.0		0.167		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
62		32.0		2.0		0.172		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
63		32.0		2.0		0.181		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
64		32.0		2.0		0.174		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
65		32.0		2.0		0.164		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
66		32.0		2.0		0.184		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
67		32.0		2.0		0.185		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
68		32.0		2.0		0.197		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
69		32.0		2.0		0.168		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
70		32.0		2.0		0.18		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
71		32.0		2.0		0.181		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
72		32.0		2.0		0.177		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
73		32.0		2.0		0.179		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
74		32.0		2.0		0.173		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
75		32.0		2.0		0.181		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
76		32.0		2.0		0.174		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
77		32.0		2.0		0.158		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
78		32.0		2.0		0.17		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
79		32.0		2.0		0.188		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
80		32.0		2.0		0.181		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
81		32.0		2.0		0.179		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
82		32.0		2.0		0.197		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
83		32.0		2.0		0.221		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
84		32.0		2.0		0.203		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
85		32.0		2.0		0.203		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
86		32.0		2.0		0.196		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
87		32.0		2.0		0.2		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
88		32.0		2.0		0.195		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
89		32.0		2.0		0.193		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
90		32.0		2.0		0.192		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
91		32.0		2.0		0.18		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
92		32.0		2.0		0.183		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
93		32.0		2.0		0.2		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
94		32.0		2.0		0.184		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
95		32.0		2.0		0.184		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
96		32.0		2.0		0.184		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
97		32.0		2.0		0.208		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
98		32.0		2.0		0.187		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
99		32.0		2.0		0.191		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
100		32.0		2.0		0.174		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
101		32.0		2.0		0.184		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
102		32.0		2.0		0.179		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
103		32.0		2.0		0.175		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
104		32.0		2.0		0.17		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
105		32.0		2.0		0.192		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
106		32.0		2.0		0.187		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
107		32.0		2.0		0.176		2.0		print_tap(lt(len_(input1), mod(len_(input2), len_(println_tap(input3)))))
108		32.0		1.0		0.184		1.0		lt(len_(input1), mod(mod(len_(input2), add(len_(println_tap(input3.title())), 10)), len_(str_(input3))))
109		32.0		1.0		0.194		1.0		lt(len_(input1), mod(mod(len_(input2), add(len_(println_tap(input3.title())), 10)), len_(str_(input3))))
110		32.0		1.0		0.213		1.0		lt(len_(input1), mod(mod(len_(input2), add(len_(println_tap(input3.title())), 10)), len_(str_(input3))))
111		32.0		0.0		0.225		0.0		lt(len_(input1), mod(min_(len_(input2), add(len_(input3.title()), min_(println_tap(2), 10))), len_(str_(input3))))
Solution found.
def compare_string_lengths(input1, input2, input3):
    return lt(len_(input1), mod(min_(len_(input2), add(len_(input3.title()), min_(println_tap(2), 10))), len_(str_(input3))))

Simplifying genome of length 27.
Simplified to length 26.
Simplified to length 25.
Simplified to length 24.
Simplified to length 23.
Simplified to length 22.
Simplified to length 21.
Simplified to length 16.
Simplified to length 15.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified genome: length=11 error=0.0
def compare_string_lengths(input1, input2, input3):
    return lt(len_(input1), mod(min_(len_(input2), len_(input3)), len_(input3)))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 14.0
