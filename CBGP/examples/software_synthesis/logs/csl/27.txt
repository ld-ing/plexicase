Gen		Median		MAD		Best		Div		Run Best		Code
1		24400000.0		24.0		0.061		24.0		print_tap(input1).isupper()
2		35.0		24.0		0.085		24.0		print_tap(input1).isupper()
3		60.0		24.0		0.107		24.0		print_tap(input1).isupper()
4		57.0		24.0		0.134		24.0		print_tap(input1).isupper()
5		57.5		24.0		0.152		24.0		print_tap(input1).isupper()
6		47.0		24.0		0.171		24.0		print_tap(input1).isupper()
7		47.0		23.0		0.189		23.0		float2bool(div(bool2float(input1.isupper()), int2float(lt(input1, input2))))
8		47.0		23.0		0.237		23.0		float2bool(div(bool2float(input1.isupper()), int2float(lt(input1, input2))))
9		47.0		23.0		0.25		23.0		float2bool(div(bool2float(input1.isupper()), int2float(lt(input1, input2))))
10		45.0		22.0		0.284		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
11		44.0		22.0		0.306		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
12		45.0		22.0		0.307		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
13		42.0		22.0		0.321		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
14		43.0		22.0		0.291		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
15		42.0		22.0		0.309		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
16		40.0		22.0		0.322		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
17		37.0		22.0		0.319		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
18		42.0		22.0		0.326		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
19		42.0		22.0		0.334		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
20		37.0		22.0		0.329		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
21		39.0		22.0		0.347		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
22		38.5		22.0		0.365		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
23		39.0		22.0		0.342		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
24		34.0		22.0		0.336		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
25		34.0		22.0		0.359		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
26		36.0		22.0		0.376		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
27		36.0		22.0		0.368		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
28		39.0		22.0		0.324		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
29		40.5		22.0		0.344		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
30		41.0		22.0		0.358		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
31		35.0		22.0		0.341		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
32		40.0		22.0		0.36		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
33		39.0		22.0		0.364		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
34		41.0		22.0		0.363		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
35		38.0		22.0		0.33		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
36		36.0		22.0		0.343		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
37		40.0		22.0		0.346		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
38		39.0		22.0		0.354		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
39		36.0		22.0		0.337		22.0		in_(str_(-1).lower().strip(input1).upper().lstrip_ws().splitlines(), input1)
40		37.0		19.0		0.36		19.0		gt(int2float(float2int(sub(mod(len_(input3.swapcase()), 25), 10))), mul(True, len_(input1)))
41		36.0		19.0		0.366		19.0		gt(int2float(float2int(sub(mod(len_(input3.swapcase()), 25), 10))), mul(True, len_(input1)))
42		38.5		19.0		0.361		19.0		gt(int2float(float2int(sub(mod(len_(input3.swapcase()), 25), 10))), mul(True, len_(input1)))
43		39.0		17.0		0.342		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
44		38.5		17.0		0.366		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
45		36.0		17.0		0.364		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
46		36.0		17.0		0.356		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
47		42.5		17.0		0.326		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
48		44.0		17.0		0.362		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
49		40.0		17.0		0.361		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
50		40.0		17.0		0.347		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
51		38.0		17.0		0.355		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
52		40.0		17.0		0.331		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
53		39.0		17.0		0.33		17.0		gt(int2float(sub(len_(input3.swapcase()), pos(max_(25, 10)))), mul(True, len_(input1)))
54		42.0		15.0		0.311		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
55		38.0		15.0		0.283		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
56		36.0		15.0		0.286		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
57		36.0		15.0		0.312		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
58		38.0		15.0		0.304		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
59		35.0		15.0		0.301		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
60		40.0		15.0		0.311		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
61		44.0		15.0		0.286		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
62		37.0		15.0		0.262		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
63		44.0		15.0		0.29		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
64		40.0		15.0		0.264		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
65		45.0		15.0		0.287		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
66		43.0		15.0		0.275		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
67		44.0		15.0		0.258		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
68		43.0		15.0		0.264		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
69		43.0		15.0		0.275		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
70		40.0		15.0		0.293		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
71		37.5		15.0		0.273		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
72		40.0		15.0		0.264		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
73		40.0		15.0		0.254		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
74		39.5		15.0		0.274		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
75		36.0		15.0		0.273		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
76		35.0		15.0		0.28		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
77		40.0		15.0		0.28		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
78		40.5		15.0		0.271		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
79		35.0		15.0		0.279		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
80		38.0		15.0		0.283		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
81		36.0		15.0		0.277		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
82		35.0		15.0		0.259		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
83		36.0		15.0		0.267		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
84		40.0		15.0		0.268		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
85		36.0		15.0		0.273		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
86		36.0		15.0		0.273		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
87		38.0		15.0		0.256		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
88		36.5		15.0		0.274		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
89		36.0		15.0		0.27		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
90		36.0		15.0		0.26		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
91		36.0		15.0		0.278		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
92		36.0		15.0		0.276		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
93		32.5		15.0		0.261		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
94		36.0		15.0		0.276		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
95		36.0		15.0		0.262		15.0		and_(float2bool(div(print_tap(floordiv(len_(input3), 36)), 25)), gt(input3, input1.swapcase()))
96		35.0		14.0		0.274		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
97		36.0		14.0		0.3		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
98		38.0		14.0		0.281		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
99		42.0		14.0		0.294		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
100		38.0		14.0		0.282		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
101		38.0		14.0		0.296		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
102		38.0		14.0		0.294		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
103		38.0		14.0		0.295		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
104		38.0		14.0		0.316		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
105		40.0		14.0		0.272		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
106		43.0		14.0		0.298		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
107		36.0		14.0		0.286		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
108		40.0		14.0		0.281		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
109		44.5		14.0		0.262		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
110		40.0		14.0		0.293		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
111		43.0		14.0		0.262		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
112		42.0		14.0		0.303		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
113		41.0		14.0		0.288		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
114		44.0		14.0		0.295		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
115		40.0		14.0		0.281		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
116		45.0		14.0		0.291		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
117		40.0		14.0		0.303		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
118		38.0		14.0		0.282		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
119		38.0		14.0		0.312		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
120		42.0		14.0		0.313		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
121		37.0		14.0		0.31		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
122		40.0		14.0		0.313		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
123		38.5		14.0		0.319		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
124		41.5		14.0		0.338		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
125		42.0		14.0		0.341		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
126		42.0		14.0		0.3		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
127		41.0		14.0		0.333		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
128		39.0		14.0		0.349		14.0		and_(float2bool(floordiv(len_(input3), div(print_tap(abs_(int2float(36))), True))), gt(input3, if_(input2.isprintable(), println_tap(input1.swapcase()).lstrip_ws(), input3.swapcase())))
129		41.0		13.0		0.339		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
130		38.0		13.0		0.352		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
131		38.5		13.0		0.342		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
132		44.0		13.0		0.339		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
133		41.0		13.0		0.351		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
134		43.0		13.0		0.317		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
135		44.0		13.0		0.344		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
136		44.0		13.0		0.319		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
137		44.0		13.0		0.308		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
138		45.0		13.0		0.327		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
139		44.0		13.0		0.329		13.0		float2bool(do_print(mod(len_(input2), floordiv(int2float(len_(input3.title())), abs_(pos(len_(mul(input1, 1)))))), input1.capitalize()))
140		48.0		12.0		0.348		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
141		53.5		12.0		0.365		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
142		60.0		12.0		0.378		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
143		50.0		12.0		0.342		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
144		47.5		12.0		0.36		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
145		48.0		12.0		0.366		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
146		48.5		12.0		0.371		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
147		49.0		12.0		0.334		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
148		50.0		12.0		0.333		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
149		51.0		12.0		0.34		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
150		48.0		12.0		0.363		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
151		49.0		12.0		0.372		12.0		float2bool(mul(65, mod(le(len_(input2), len_(input3)), floordiv(print_tap(len_(input3)), add(input1.isnumeric(), max_(len_(input1.upper().swapcase()), 10))))))
152		49.0		11.0		0.355		11.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(1, pos(bool2int(int2bool(True)))), 15))))
153		48.0		10.0		0.342		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
154		39.0		10.0		0.346		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
155		34.5		10.0		0.345		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
156		41.5		10.0		0.337		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
157		39.5		10.0		0.341		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
158		44.0		10.0		0.351		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
159		49.0		10.0		0.353		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
160		53.5		10.0		0.376		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
161		51.0		10.0		0.321		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
162		42.5		10.0		0.309		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
163		51.0		10.0		0.325		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
164		52.5		10.0		0.344		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
165		45.0		10.0		0.348		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
166		36.0		10.0		0.335		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
167		40.0		10.0		0.353		10.0		float2bool(mod(gt(len_(input2), len_(input1)), floordiv(int2float(len_(input3)), add(round_(not_(pos(True)), 1), 15))))
168		36.0		9.0		0.361		9.0		float2bool(mod(gt(print_tap(len_(input2.swapcase())), len_(input1)), floordiv(len_(input3), min_(len_(input1.swapcase()), pos(print_do(int2bool(True), 15))))))
169		36.0		7.0		0.338		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
170		39.0		7.0		0.312		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
171		31.5		7.0		0.317		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
172		34.0		7.0		0.325		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
173		33.0		7.0		0.327		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
174		33.0		7.0		0.339		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
175		30.0		7.0		0.312		7.0		float2bool(println_tap(floordiv(mod(len_(input2), floordiv(len_(input3), 1)), add(mod(True, 15), len_(input1)))))
176		34.5		5.0		0.308		5.0		float2bool(abs_(mod(gt(len_(input2), len_(input1)), floordiv(abs_(len_(input3)), min_(len_(input2), print_do(True, 15))))))
177		30.0		5.0		0.297		5.0		float2bool(abs_(mod(gt(len_(input2), len_(input1)), floordiv(abs_(len_(input3)), min_(len_(input2), print_do(True, 15))))))
178		31.0		5.0		0.318		5.0		float2bool(abs_(mod(gt(len_(input2), len_(input1)), floordiv(abs_(len_(input3)), min_(len_(input2), print_do(True, 15))))))
179		31.0		0.0		0.311		0.0		float2bool(abs_(mod(gt(len_(input2), len_(input1)), floordiv(abs_(len_(input3)), min_(neg(len_(input2)), print_do(True, 15))))))
Solution found.
def compare_string_lengths(input1, input2, input3):
    return float2bool(abs_(mod(gt(len_(input2), len_(input1)), floordiv(abs_(len_(input3)), min_(neg(len_(input2)), print_do(True, 15))))))

Simplifying genome of length 31.
Simplified to length 29.
Simplified to length 28.
Simplified to length 27.
Simplified to length 25.
Simplified to length 24.
Simplified to length 21.
Simplified to length 20.
Simplified to length 19.
Simplified to length 18.
Simplified to length 17.
Simplified to length 16.
Simplified to length 15.
Simplified to length 13.
Simplified genome: length=13 error=0.0
def compare_string_lengths(input1, input2, input3):
    return float2bool(mod(gt(len_(input2), len_(input1)), floordiv(len_(input3), neg(len_(input2)))))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 8.0
