Gen		Median		MAD		Best		Div		Run Best		Code
1		11700000.0		1106		0.01		1106		input1
2		1106.0		1106		0.015		1106		input1
3		1106.0		1106		0.012		1106		input1
4		1106.0		1106		0.011		1106		input1
5		1106.0		1106		0.014		1106		input1
6		1106.0		1106		0.014		1106		input1
7		1106.0		1106		0.015		1106		input1
8		1106.0		1106		0.013		1106		input1
9		1106.0		1106		0.016		1106		input1
10		1493.0		1106		0.022		1106		input1
11		1491.5		1106		0.017		1106		input1
12		1490.0		1106		0.018		1106		input1
13		1106.0		1106		0.018		1106		input1
14		1106.0		1106		0.015		1106		input1
15		1106.0		1106		0.02		1106		input1
16		1106.0		1106		0.02		1106		input1
17		1490.0		1106		0.022		1106		input1
18		1106.0		1106		0.018		1106		input1
19		1106.0		1106		0.021		1106		input1
20		1106.0		1106		0.029		1106		input1
21		1106.0		0		0.025		0		map(lambda _0: max_(bool2int(le(1, _0)), _0), input1)
Solution found.
def negative_to_zero(input1):
    return map(lambda _0: max_(bool2int(le(1, _0)), _0), input1)

Simplifying genome of length 70.
Simplified to length 57.
Simplified to length 56.
Simplified to length 51.
Simplified to length 48.
Simplified to length 43.
Simplified to length 42.
Simplified to length 40.
Simplified to length 38.
Simplified to length 36.
Simplified to length 35.
Simplified to length 33.
Simplified to length 32.
Simplified to length 30.
Simplified to length 29.
Simplified to length 25.
Simplified to length 24.
Simplified to length 21.
Simplified to length 17.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified to length 10.
Simplified genome: length=10 error=0
def negative_to_zero(input1):
    return map(lambda _0: max_(bool2int(le(1, _0)), _0), input1)

[0 0 0 ... 0 0 0]
Final Test Error: 0
