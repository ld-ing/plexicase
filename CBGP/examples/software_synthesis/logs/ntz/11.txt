Gen		Median		MAD		Best		Div		Run Best		Code
1		11700000.0		1298		0.012		1298		input1
2		1298.0		1298		0.01		1298		input1
3		1298.0		1298		0.013		1298		input1
4		1298.0		1298		0.014		1298		input1
5		1298.0		1298		0.015		1298		input1
6		1298.0		1298		0.012		1298		input1
7		1298.0		1298		0.014		1298		input1
8		1298.0		1298		0.014		1298		input1
9		1298.0		1298		0.016		1298		input1
10		1298.0		1298		0.014		1298		input1
11		1298.0		1298		0.016		1298		input1
12		1298.0		1298		0.017		1298		input1
13		1298.0		1298		0.012		1298		input1
14		1298.0		1298		0.016		1298		input1
15		1298.0		1298		0.015		1298		input1
16		1298.0		1298		0.019		1298		input1
17		1298.0		1298		0.018		1298		input1
18		1298.0		1298		0.018		1298		input1
19		1298.0		1298		0.014		1298		input1
20		1547.0		1298		0.02		1298		input1
21		1381.0		0		0.017		0		map(lambda _0: max_(print_tap(_0), pos(println_tap(0))), input1)
Solution found.
def negative_to_zero(input1):
    return map(lambda _0: max_(print_tap(_0), pos(println_tap(0))), input1)

Simplifying genome of length 62.
Simplified to length 58.
Simplified to length 45.
Simplified to length 39.
Simplified to length 36.
Simplified to length 35.
Simplified to length 33.
Simplified to length 32.
Simplified to length 30.
Simplified to length 28.
Simplified to length 24.
Simplified to length 21.
Simplified to length 19.
Simplified to length 17.
Simplified to length 16.
Simplified to length 15.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified to length 10.
Simplified to length 9.
Simplified to length 8.
Simplified to length 7.
Simplified genome: length=7 error=0
def negative_to_zero(input1):
    return map(lambda _0: max_(_0, 0), input1)

[0 0 0 ... 0 0 0]
Final Test Error: 0
