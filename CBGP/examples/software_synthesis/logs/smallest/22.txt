Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		61.0		0.016		61.0		ge(-45, print_do(input2, pos(neg(abs_(float2int(-1))))))
2		73.0		61.0		0.014		61.0		ge(-45, print_do(input2, pos(neg(abs_(float2int(-1))))))
3		73.0		61.0		0.012		61.0		ge(-45, print_do(input2, pos(neg(abs_(float2int(-1))))))
4		72.0		36.0		0.016		36.0		print_tap(min_(input3, input2))
5		73.0		36.0		0.024		36.0		print_tap(min_(input3, input2))
6		47.0		36.0		0.041		36.0		print_tap(min_(input3, input2))
7		47.0		36.0		0.041		36.0		print_tap(min_(input3, input2))
8		52.0		36.0		0.056		36.0		print_tap(min_(input3, input2))
9		52.0		17.0		0.056		17.0		print_tap(min_(input4, min_(input3, input2)))
10		52.0		0.0		0.047		0.0		print_tap(min_(input4, min_(min_(input3, input2), input1)))
Solution found.
def smallest(input1, input2, input3, input4):
    return print_tap(min_(input4, min_(min_(input3, input2), input1)))

Simplifying genome of length 59.
Simplified genome: length=59 error=0.0
def smallest(input1, input2, input3, input4):
    return print_tap(min_(input4, min_(min_(input3, input2), input1)))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
