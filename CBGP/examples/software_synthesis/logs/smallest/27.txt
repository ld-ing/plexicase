Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		59.0		0.02		59.0		str_(int2bool(do_print(float2bool(10), input3)))
2		68.0		59.0		0.016		59.0		str_(int2bool(do_print(float2bool(10), input3)))
3		68.0		59.0		0.019		59.0		str_(int2bool(do_print(float2bool(10), input3)))
4		68.0		59.0		0.019		59.0		str_(int2bool(do_print(float2bool(10), input3)))
5		68.0		59.0		0.027		59.0		str_(int2bool(do_print(float2bool(10), input3)))
6		68.0		59.0		0.021		59.0		str_(int2bool(do_print(float2bool(10), input3)))
7		68.0		33.0		0.02		33.0		print_tap(min_(input1, pos(input3)))
8		68.0		33.0		0.039		33.0		print_tap(min_(input1, pos(input3)))
9		61.0		33.0		0.054		33.0		print_tap(min_(input1, pos(input3)))
10		59.0		14.0		0.065		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
11		58.0		14.0		0.072		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
12		59.0		14.0		0.079		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
13		49.0		14.0		0.088		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
14		49.0		14.0		0.094		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
15		44.0		14.0		0.09		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
16		49.0		14.0		0.098		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
17		44.0		14.0		0.094		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
18		49.0		14.0		0.099		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
19		44.0		14.0		0.095		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
20		49.0		14.0		0.098		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
21		44.0		14.0		0.105		14.0		abs_(print_tap(min_(min_(input2, input1), pos(input3))))
22		44.0		0.0		0.111		0.0		print_tap(min_(min_(min_(input2, input1), input4), input3))
Solution found.
def smallest(input1, input2, input3, input4):
    return print_tap(min_(min_(min_(input2, input1), input4), input3))

Simplifying genome of length 46.
Simplified to length 43.
Simplified to length 37.
Simplified to length 31.
Simplified to length 29.
Simplified to length 28.
Simplified to length 27.
Simplified to length 24.
Simplified to length 23.
Simplified to length 22.
Simplified to length 17.
Simplified to length 16.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified to length 10.
Simplified genome: length=10 error=0.0
def smallest(input1, input2, input3, input4):
    return eq(10, print_tap(min_(min_(min_(input2, input1), input4), input3)))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
