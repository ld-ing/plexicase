Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		59.0		0.012		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
2		73.0		59.0		0.013		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
3		72.0		59.0		0.017		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
4		72.0		59.0		0.014		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
5		72.0		59.0		0.015		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
6		72.0		59.0		0.017		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
7		72.0		59.0		0.016		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
8		72.0		59.0		0.016		59.0		ge(bool2float(False), eq(do_print(2, input2), input1))
9		72.0		52.0		0.021		52.0		print_tap(min_(input1, input4))
10		60.0		35.0		0.041		35.0		print_tap(min_(input3, input2))
11		50.0		35.0		0.044		35.0		print_tap(min_(input3, input2))
12		48.0		35.0		0.058		35.0		print_tap(min_(input3, input2))
13		52.0		23.0		0.051		23.0		print_tap(min_(input2, min_(input1, input4)))
14		46.0		23.0		0.061		23.0		print_tap(min_(input2, min_(input1, input4)))
15		37.0		19.0		0.075		19.0		print_tap(min_(input2, min_(input1, input3)))
16		36.0		0.0		0.09		0.0		print_tap(min_(min_(input2, min_(input1, input3)), input4))
Solution found.
def smallest(input1, input2, input3, input4):
    return print_tap(min_(min_(input2, min_(input1, input3)), input4))

Simplifying genome of length 21.
Simplified genome: length=21 error=0.0
def smallest(input1, input2, input3, input4):
    return print_tap(min_(min_(input2, min_(input1, input3)), input4))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
