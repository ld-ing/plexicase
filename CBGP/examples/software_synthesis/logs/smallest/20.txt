Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		66.0		0.02		66.0		print_do(pos(input4), input3)
2		67.0		66.0		0.02		66.0		print_do(pos(input4), input3)
3		67.0		66.0		0.02		66.0		print_do(pos(input4), input3)
4		67.0		66.0		0.015		66.0		print_do(pos(input4), input3)
5		67.0		49.0		0.018		49.0		lt(84, ge(div(abs_(mod(10, print_tap(min_(input1, input2)))), 0.5171149102244299), input1))
6		67.0		40.0		0.038		40.0		lt(84, ge(div(abs_(mod(10, print_tap(min_(input4, input1)))), input2), 0.5171149102244299))
7		49.0		24.0		0.051		24.0		lt(84, min_(div(float2int(abs_(mod(10, print_tap(min_(min_(input4, input1), input2))))), 0.5171149102244299), floordiv(input1, input1)))
8		57.0		24.0		0.074		24.0		lt(84, min_(div(float2int(abs_(mod(10, print_tap(min_(min_(input4, input1), input2))))), 0.5171149102244299), floordiv(input1, input1)))
9		57.0		16.0		0.081		16.0		lt(84, min_(div(float2int(abs_(mod(10, print_tap(min_(min_(input4, input1), input3))))), input2), 0.5171149102244299))
10		58.0		0.0		0.078		0.0		min_(div(abs_(10), print_tap(min_(min_(input4, min_(input1, input3)), input2))), floordiv(input1, input1))
Solution found.
def smallest(input1, input2, input3, input4):
    return min_(div(abs_(10), print_tap(min_(min_(input4, min_(input1, input3)), input2))), floordiv(input1, input1))

Simplifying genome of length 48.
Simplified genome: length=48 error=0.0
def smallest(input1, input2, input3, input4):
    return min_(div(abs_(10), print_tap(min_(min_(input4, min_(input1, input3)), input2))), floordiv(input1, input1))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
