Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		66.0		0.014		66.0		print_tap(input2)
2		69.0		66.0		0.021		66.0		print_tap(input2)
3		67.0		66.0		0.017		66.0		print_tap(input2)
4		67.0		66.0		0.019		66.0		print_tap(input2)
5		69.0		66.0		0.024		66.0		print_tap(input2)
6		67.0		66.0		0.017		66.0		print_tap(input2)
7		67.0		66.0		0.02		66.0		print_tap(input2)
8		67.0		66.0		0.022		66.0		print_tap(input2)
9		67.0		66.0		0.018		66.0		print_tap(input2)
10		67.0		66.0		0.019		66.0		print_tap(input2)
11		67.0		47.0		0.019		47.0		str_(print_do(min_(input1, input2), 2)).isdecimal()
12		67.0		45.0		0.03		45.0		ne(print_do(min_(input1, input3), input2), 2)
13		67.0		40.0		0.049		40.0		print_do(min_(input3, input2), 2)
14		47.0		23.0		0.066		23.0		le(print_do(min_(min_(input1, input3), input2), 2), float2bool(2))
15		45.0		21.0		0.079		21.0		bool2float(str_(ne(print_do(min_(min_(input1, input4), input3), input2), 2)).isdecimal())
16		45.0		0.0		0.076		0.0		le(print_do(min_(min_(min_(input1, input4), input3), input2), 2), 2)
Solution found.
def smallest(input1, input2, input3, input4):
    return le(print_do(min_(min_(min_(input1, input4), input3), input2), 2), 2)

Simplifying genome of length 36.
Simplified to length 35.
Simplified to length 31.
Simplified to length 30.
Simplified to length 28.
Simplified to length 27.
Simplified to length 26.
Simplified to length 25.
Simplified to length 24.
Simplified to length 23.
Simplified to length 22.
Simplified to length 21.
Simplified to length 20.
Simplified to length 19.
Simplified to length 17.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified genome: length=11 error=0.0
def smallest(input1, input2, input3, input4):
    return le(print_do(min_(min_(min_(input1, input4), input3), input2), 2), 2)

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
