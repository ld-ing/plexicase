Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		63.0		0.016		63.0		pos(div(print_tap(input3), input1))
2		69.0		63.0		0.015		63.0		pos(div(print_tap(input3), input1))
3		69.0		63.0		0.016		63.0		pos(div(print_tap(input3), input1))
4		69.0		63.0		0.022		63.0		pos(div(print_tap(input3), input1))
5		69.0		63.0		0.02		63.0		pos(div(print_tap(input3), input1))
6		69.0		63.0		0.017		63.0		pos(div(print_tap(input3), input1))
7		69.0		63.0		0.019		63.0		pos(div(print_tap(input3), input1))
8		69.0		63.0		0.022		63.0		pos(div(print_tap(input3), input1))
9		69.0		63.0		0.022		63.0		pos(div(print_tap(input3), input1))
10		69.0		63.0		0.029		63.0		pos(div(print_tap(input3), input1))
11		69.0		63.0		0.019		63.0		pos(div(print_tap(input3), input1))
12		69.0		38.0		0.021		38.0		abs_(do_print(neg(-55), min_(input4, input3)))
13		69.0		38.0		0.035		38.0		abs_(do_print(neg(-55), min_(input4, input3)))
14		65.0		38.0		0.049		38.0		abs_(do_print(neg(-55), min_(input4, input3)))
15		63.0		38.0		0.048		38.0		abs_(do_print(neg(-55), min_(input4, input3)))
16		65.0		18.0		0.064		18.0		add(True, do_print(neg(-55), float2int(min_(min_(input2, input4), input3))))
17		49.0		18.0		0.071		18.0		add(True, do_print(neg(-55), float2int(min_(min_(input2, input4), input3))))
18		44.0		18.0		0.063		18.0		add(True, do_print(neg(-55), float2int(min_(min_(input2, input4), input3))))
19		63.0		18.0		0.074		18.0		add(True, do_print(neg(-55), float2int(min_(min_(input2, input4), input3))))
20		59.0		18.0		0.071		18.0		add(True, do_print(neg(-55), float2int(min_(min_(input2, input4), input3))))
21		58.0		18.0		0.077		18.0		add(True, do_print(neg(-55), float2int(min_(min_(input2, input4), input3))))
22		49.0		0.0		0.084		0.0		do_print(add(True, neg(pos(input4))), min_(min_(min_(input2, input3), input4), input1))
Solution found.
def smallest(input1, input2, input3, input4):
    return do_print(add(True, neg(pos(input4))), min_(min_(min_(input2, input3), input4), input1))

Simplifying genome of length 26.
Simplified to length 19.
Simplified to length 18.
Simplified to length 17.
Simplified to length 16.
Simplified to length 15.
Simplified to length 13.
Simplified to length 11.
Simplified to length 10.
Simplified to length 9.
Simplified genome: length=9 error=0.0
def smallest(input1, input2, input3, input4):
    return do_print(True, min_(min_(min_(input2, input3), input4), input1))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
