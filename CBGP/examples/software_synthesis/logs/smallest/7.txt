Gen		Median		MAD		Best		Div		Run Best		Code
1		105.0		55.0		0.021		55.0		str_(print_do(input1, False)).isdecimal()
2		69.0		55.0		0.018		55.0		str_(print_do(input1, False)).isdecimal()
3		68.0		55.0		0.018		55.0		str_(print_do(input1, False)).isdecimal()
4		68.0		55.0		0.022		55.0		str_(print_do(input1, False)).isdecimal()
5		68.0		37.0		0.023		37.0		print_do(min_(input2, input1), 0)
6		69.0		37.0		0.033		37.0		print_do(min_(input2, input1), 0)
7		65.0		16.0		0.06		16.0		print_do(min_(input2, min_(input4, input1)), 0)
8		68.0		16.0		0.083		16.0		print_do(min_(input2, min_(input4, input1)), 0)
9		59.0		0.0		0.093		0.0		print_do(min_(input2, min_(min_(input3, input4), input1)), 0)
Solution found.
def smallest(input1, input2, input3, input4):
    return print_do(min_(input2, min_(min_(input3, input4), input1)), 0)

Simplifying genome of length 60.
Simplified to length 55.
Simplified to length 54.
Simplified to length 53.
Simplified to length 49.
Simplified to length 44.
Simplified to length 43.
Simplified to length 42.
Simplified to length 38.
Simplified to length 37.
Simplified to length 36.
Simplified to length 30.
Simplified to length 29.
Simplified to length 27.
Simplified to length 24.
Simplified to length 22.
Simplified to length 21.
Simplified to length 18.
Simplified to length 15.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified genome: length=11 error=0.0
def smallest(input1, input2, input3, input4):
    return print_do(min_(input2, min_(min_(input3, input4), input1)), ge(-65, 0.8759509501156952))

[0. 0. 0. ... 0. 0. 0.]
Final Test Error: 0.0
