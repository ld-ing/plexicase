Gen		Median		MAD		Best		Div		Run Best		Code
1		100.0		43.0		0.007		43.0		print_tap(input3)
2		50.0		43.0		0.007		43.0		print_tap(input3)
3		50.0		43.0		0.011		43.0		print_tap(input3)
4		46.0		43.0		0.013		43.0		print_tap(input3)
5		47.0		42.0		0.028		42.0		print_tap(min_(input1, input3))
6		49.0		27.0		0.035		27.0		print_do(min_(max_(input3, input1), input2), gt(-1, int2float(-92)))
7		47.0		27.0		0.058		27.0		print_do(min_(max_(input3, input1), input2), gt(-1, int2float(-92)))
8		49.0		17.0		0.06		17.0		print_do(min_(max_(input1, input2), input3), -1)
9		49.0		17.0		0.068		17.0		print_do(min_(max_(input1, input2), input3), -1)
10		52.0		17.0		0.088		17.0		print_do(min_(max_(input1, input2), input3), -1)
11		50.0		17.0		0.085		17.0		print_do(min_(max_(input1, input2), input3), -1)
12		49.0		17.0		0.078		17.0		print_do(min_(max_(input1, input2), input3), -1)
13		47.0		17.0		0.083		17.0		print_do(min_(max_(input1, input2), input3), -1)
14		52.0		17.0		0.07		17.0		print_do(min_(max_(input1, input2), input3), -1)
15		52.0		17.0		0.066		17.0		print_do(min_(max_(input1, input2), input3), -1)
16		50.0		17.0		0.073		17.0		print_do(min_(max_(input1, input2), input3), -1)
17		52.0		17.0		0.078		17.0		print_do(min_(max_(input1, input2), input3), -1)
18		52.0		17.0		0.081		17.0		print_do(min_(max_(input1, input2), input3), -1)
19		54.0		17.0		0.072		17.0		print_do(min_(max_(input1, input2), input3), -1)
20		52.0		17.0		0.083		17.0		print_do(min_(max_(input1, input2), input3), -1)
21		52.0		17.0		0.083		17.0		print_do(min_(max_(input1, input2), input3), -1)
22		59.5		17.0		0.081		17.0		print_do(min_(max_(input1, input2), input3), -1)
23		52.0		17.0		0.098		17.0		print_do(min_(max_(input1, input2), input3), -1)
24		69.0		17.0		0.09		17.0		print_do(min_(max_(input1, input2), input3), -1)
25		57.0		17.0		0.094		17.0		print_do(min_(max_(input1, input2), input3), -1)
26		52.0		17.0		0.1		17.0		print_do(min_(max_(input1, input2), input3), -1)
27		57.5		17.0		0.092		17.0		print_do(min_(max_(input1, input2), input3), -1)
28		60.0		17.0		0.108		17.0		print_do(min_(max_(input1, input2), input3), -1)
29		52.0		17.0		0.091		17.0		print_do(min_(max_(input1, input2), input3), -1)
30		52.0		17.0		0.09		17.0		print_do(min_(max_(input1, input2), input3), -1)
31		53.0		17.0		0.093		17.0		print_do(min_(max_(input1, input2), input3), -1)
32		70.0		17.0		0.103		17.0		print_do(min_(max_(input1, input2), input3), -1)
33		54.0		17.0		0.118		17.0		print_do(min_(max_(input1, input2), input3), -1)
34		60.5		17.0		0.096		17.0		print_do(min_(max_(input1, input2), input3), -1)
35		69.0		17.0		0.123		17.0		print_do(min_(max_(input1, input2), input3), -1)
36		65.5		17.0		0.117		17.0		print_do(min_(max_(input1, input2), input3), -1)
37		64.0		17.0		0.117		17.0		print_do(min_(max_(input1, input2), input3), -1)
38		69.0		17.0		0.122		17.0		print_do(min_(max_(input1, input2), input3), -1)
39		64.0		15.0		0.119		15.0		print_do(min_(max_(min_(input1, input2), input3), max_(input1, abs_(input2))), str_(int2float(int2bool(10))))
40		66.0		0.0		0.132		0.0		print_do(min_(max_(min_(input1, input2), input3), max_(input1, input2)), str_(int2float(int2bool(10))))
Solution found.
def median(input1, input2, input3):
    return print_do(min_(max_(min_(input1, input2), input3), max_(input1, input2)), str_(int2float(int2bool(10))))

Simplifying genome of length 74.
Simplified to length 60.
Simplified to length 58.
Simplified to length 54.
Simplified to length 53.
Simplified to length 52.
Simplified to length 49.
Simplified to length 47.
Simplified to length 40.
Simplified to length 36.
Simplified to length 34.
Simplified to length 32.
Simplified to length 30.
Simplified to length 29.
Simplified to length 27.
Simplified to length 26.
Simplified to length 25.
Simplified to length 23.
Simplified to length 22.
Simplified to length 21.
Simplified to length 20.
Simplified to length 19.
Simplified to length 17.
Simplified to length 16.
Simplified to length 15.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified genome: length=12 error=0.0
def median(input1, input2, input3):
    return print_do(min_(max_(min_(input1, input2), input3), max_(input1, input2)), str_(10))

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Final Test Error: 0.0
