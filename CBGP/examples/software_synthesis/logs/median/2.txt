Gen		Median		MAD		Best		Div		Run Best		Code
1		100.0		43.0		0.013		43.0		print_do(str_(input2), True)
2		49.0		43.0		0.009		43.0		print_do(str_(input2), True)
3		49.0		43.0		0.008		43.0		print_do(str_(input2), True)
4		49.0		43.0		0.013		43.0		print_do(str_(input2), True)
5		49.0		43.0		0.014		43.0		print_do(str_(input2), True)
6		49.0		21.0		0.022		21.0		print_tap(min_(input2, max_(input3, input1)))
7		46.0		21.0		0.037		21.0		print_tap(min_(input2, max_(input3, input1)))
8		43.0		21.0		0.054		21.0		print_tap(min_(input2, max_(input3, input1)))
9		45.0		21.0		0.052		21.0		print_tap(min_(input2, max_(input3, input1)))
10		43.0		21.0		0.05		21.0		print_tap(min_(input2, max_(input3, input1)))
11		43.0		21.0		0.074		21.0		print_tap(min_(input2, max_(input3, input1)))
12		45.0		21.0		0.067		21.0		print_tap(min_(input2, max_(input3, input1)))
13		45.0		21.0		0.076		21.0		print_tap(min_(input2, max_(input3, input1)))
14		45.0		21.0		0.074		21.0		print_tap(min_(input2, max_(input3, input1)))
15		45.0		21.0		0.083		21.0		print_tap(min_(input2, max_(input3, input1)))
16		43.0		21.0		0.087		21.0		print_tap(min_(input2, max_(input3, input1)))
17		45.0		21.0		0.089		21.0		print_tap(min_(input2, max_(input3, input1)))
18		45.0		21.0		0.084		21.0		print_tap(min_(input2, max_(input3, input1)))
19		43.0		21.0		0.091		21.0		print_tap(min_(input2, max_(input3, input1)))
20		43.0		16.0		0.094		16.0		print_tap(min_(abs_(input3), max_(min_(input2, input3), input1)))
21		43.0		16.0		0.117		16.0		print_tap(min_(abs_(input3), max_(min_(input2, input3), input1)))
22		46.0		16.0		0.099		16.0		print_tap(min_(abs_(input3), max_(min_(input2, input3), input1)))
23		46.0		16.0		0.111		16.0		print_tap(min_(abs_(input3), max_(min_(input2, input3), input1)))
24		45.5		16.0		0.104		16.0		print_tap(min_(abs_(input3), max_(min_(input2, input3), input1)))
25		46.0		15.0		0.091		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
26		46.0		15.0		0.109		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
27		48.0		15.0		0.1		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
28		46.0		15.0		0.122		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
29		50.0		15.0		0.124		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
30		49.0		15.0		0.127		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
31		46.0		15.0		0.11		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
32		49.0		15.0		0.116		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
33		50.0		15.0		0.135		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
34		48.5		15.0		0.129		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
35		47.0		15.0		0.125		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
36		50.0		15.0		0.104		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
37		50.0		15.0		0.116		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
38		49.0		15.0		0.111		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
39		47.5		15.0		0.115		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
40		50.0		15.0		0.123		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
41		49.0		15.0		0.119		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
42		50.0		15.0		0.12		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
43		50.0		15.0		0.107		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
44		49.0		15.0		0.122		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
45		49.0		15.0		0.111		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
46		49.0		15.0		0.115		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
47		49.0		15.0		0.121		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
48		49.0		15.0		0.122		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
49		48.5		15.0		0.125		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
50		47.0		15.0		0.122		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
51		46.0		15.0		0.116		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
52		49.0		15.0		0.13		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
53		50.0		15.0		0.126		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
54		50.0		15.0		0.12		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
55		46.0		15.0		0.109		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
56		46.0		15.0		0.128		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
57		45.0		15.0		0.124		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
58		49.0		15.0		0.106		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
59		49.0		15.0		0.128		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
60		48.0		15.0		0.126		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
61		46.0		15.0		0.115		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
62		46.0		15.0		0.123		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
63		46.0		15.0		0.121		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
64		46.0		15.0		0.116		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
65		49.0		15.0		0.128		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
66		48.0		15.0		0.123		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
67		50.0		15.0		0.131		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
68		46.0		15.0		0.129		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
69		49.0		15.0		0.124		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
70		50.0		15.0		0.116		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
71		50.0		15.0		0.131		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
72		50.0		15.0		0.114		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
73		49.0		15.0		0.127		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
74		50.0		15.0		0.133		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
75		50.0		15.0		0.115		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
76		50.0		15.0		0.127		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
77		50.0		15.0		0.121		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
78		50.0		15.0		0.125		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
79		46.0		15.0		0.121		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
80		49.0		15.0		0.119		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
81		50.0		15.0		0.118		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
82		50.0		15.0		0.132		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
83		50.0		15.0		0.131		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
84		50.0		15.0		0.136		15.0		print_tap(min_(abs_(input3), max_(min_(input3, input1), input2)))
85		49.0		13.0		0.128		13.0		print_tap(min_(max_(min_(input2, input3), input1), max_(input3, abs_(input2))))
86		49.0		0.0		0.148		0.0		print_tap(min_(max_(min_(float2int(input2), input3), input1), max_(input3, input2)))
Solution found.
def median(input1, input2, input3):
    return print_tap(min_(max_(min_(float2int(input2), input3), input1), max_(input3, input2)))

Simplifying genome of length 32.
Simplified genome: length=32 error=0.0
def median(input1, input2, input3):
    return print_tap(min_(max_(min_(float2int(input2), input3), input1), max_(input3, input2)))

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Final Test Error: 0.0
