Gen		Median		MAD		Best		Div		Run Best		Code
1		100.0		44.0		0.017		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
2		57.0		44.0		0.022		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
3		57.0		44.0		0.035		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
4		57.0		44.0		0.03		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
5		57.0		44.0		0.038		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
6		57.0		44.0		0.038		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
7		57.0		44.0		0.044		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
8		57.0		44.0		0.052		44.0		not_(gt(float2int(print_tap(input2)), sub(abs_(-1), ne(gt(float2int(input3), 10), 0.28587876730919914))))
9		57.0		27.0		0.069		27.0		neg(int2float(print_tap(min_(max_(input1, input3), input2))))
10		54.0		24.0		0.087		24.0		print_tap(max_(min_(input3, input2), input1))
11		51.5		24.0		0.093		24.0		print_tap(max_(min_(input3, input2), input1))
12		54.0		24.0		0.116		24.0		print_tap(max_(min_(input3, input2), input1))
13		48.0		17.0		0.109		17.0		print_tap(max_(min_(input3, input1), input2))
14		42.0		17.0		0.1		17.0		print_tap(max_(min_(input3, input1), input2))
15		44.0		17.0		0.112		17.0		print_tap(max_(min_(input3, input1), input2))
16		48.0		17.0		0.131		17.0		print_tap(max_(min_(input3, input1), input2))
17		48.0		17.0		0.121		17.0		print_tap(max_(min_(input3, input1), input2))
18		51.5		17.0		0.135		17.0		print_tap(max_(min_(input3, input1), input2))
19		54.0		17.0		0.113		17.0		print_tap(max_(min_(input3, input1), input2))
20		50.5		17.0		0.132		17.0		print_tap(max_(min_(input3, input1), input2))
21		48.0		17.0		0.13		17.0		print_tap(max_(min_(input3, input1), input2))
22		51.0		17.0		0.126		17.0		print_tap(max_(min_(input3, input1), input2))
23		51.0		17.0		0.128		17.0		print_tap(max_(min_(input3, input1), input2))
24		54.0		17.0		0.122		17.0		print_tap(max_(min_(input3, input1), input2))
25		51.0		17.0		0.125		17.0		print_tap(max_(min_(input3, input1), input2))
26		54.0		17.0		0.141		17.0		print_tap(max_(min_(input3, input1), input2))
27		48.0		17.0		0.132		17.0		print_tap(max_(min_(input3, input1), input2))
28		51.0		17.0		0.116		17.0		print_tap(max_(min_(input3, input1), input2))
29		54.0		17.0		0.128		17.0		print_tap(max_(min_(input3, input1), input2))
30		54.0		17.0		0.124		17.0		print_tap(max_(min_(input3, input1), input2))
31		54.0		17.0		0.139		17.0		print_tap(max_(min_(input3, input1), input2))
32		51.0		17.0		0.119		17.0		print_tap(max_(min_(input3, input1), input2))
33		48.0		17.0		0.128		17.0		print_tap(max_(min_(input3, input1), input2))
34		51.0		16.0		0.127		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
35		48.0		16.0		0.139		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
36		50.0		16.0		0.14		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
37		48.0		16.0		0.137		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
38		49.0		16.0		0.141		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
39		48.0		16.0		0.14		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
40		48.0		16.0		0.149		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
41		48.0		16.0		0.135		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
42		51.0		16.0		0.149		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
43		51.0		16.0		0.149		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
44		51.0		16.0		0.139		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
45		51.0		16.0		0.136		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
46		51.0		16.0		0.13		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
47		51.0		16.0		0.131		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
48		51.0		16.0		0.138		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
49		51.0		16.0		0.148		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
50		51.0		16.0		0.143		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
51		51.0		16.0		0.144		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
52		50.0		16.0		0.144		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
53		47.0		16.0		0.163		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
54		50.0		16.0		0.153		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
55		50.0		16.0		0.161		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
56		48.0		16.0		0.177		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
57		54.0		16.0		0.172		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
58		51.0		16.0		0.162		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
59		51.0		16.0		0.149		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
60		51.0		16.0		0.148		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
61		51.0		16.0		0.148		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
62		51.0		16.0		0.16		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
63		51.0		16.0		0.163		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
64		51.0		16.0		0.162		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
65		48.0		16.0		0.17		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
66		51.0		16.0		0.165		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
67		51.0		16.0		0.154		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
68		52.0		16.0		0.165		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
69		54.0		16.0		0.152		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
70		51.0		16.0		0.155		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
71		51.0		16.0		0.151		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
72		51.0		16.0		0.176		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
73		51.5		16.0		0.173		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
74		54.0		16.0		0.163		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
75		50.0		16.0		0.18		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
76		51.0		16.0		0.169		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
77		54.0		16.0		0.178		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
78		51.0		16.0		0.166		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
79		51.0		16.0		0.167		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
80		54.0		16.0		0.183		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
81		54.0		16.0		0.17		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
82		51.0		16.0		0.169		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
83		54.0		16.0		0.18		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
84		54.0		16.0		0.168		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
85		51.0		16.0		0.177		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
86		51.0		16.0		0.179		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
87		51.0		16.0		0.171		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
88		51.0		16.0		0.161		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
89		54.0		16.0		0.163		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
90		51.0		16.0		0.187		16.0		print_tap(max_(min_(abs_(input3), input2), min_(input1, input3)))
91		54.0		0.0		0.169		0.0		int2bool(print_tap(float2int(min_(max_(min_(input3, input2), input1), max_(input3, input2)))))
Solution found.
def median(input1, input2, input3):
    return int2bool(print_tap(float2int(min_(max_(min_(input3, input2), input1), max_(input3, input2)))))

Simplifying genome of length 27.
Simplified to length 26.
Simplified to length 25.
Simplified to length 24.
Simplified to length 23.
Simplified to length 20.
Simplified to length 19.
Simplified to length 18.
Simplified to length 16.
Simplified to length 15.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified genome: length=11 error=0.0
def median(input1, input2, input3):
    return int2bool(print_tap(min_(max_(min_(input3, input2), input1), max_(input3, input2))))

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Final Test Error: 0.0
