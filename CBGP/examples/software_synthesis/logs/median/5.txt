Gen		Median		MAD		Best		Div		Run Best		Code
1		100.0		42.0		0.009		42.0		mod(1, print_tap(input3))
2		57.0		42.0		0.009		42.0		mod(1, print_tap(input3))
3		57.0		42.0		0.009		42.0		mod(1, print_tap(input3))
4		57.0		42.0		0.013		42.0		mod(1, print_tap(input3))
5		57.0		40.0		0.02		40.0		abs_(eq(2, not_(ne(print_do(max_(input2, input3), input2), neg(bool2float(lt(1, int2bool(input2))))))))
6		57.0		40.0		0.021		40.0		abs_(eq(2, not_(ne(print_do(max_(input2, input3), input2), neg(bool2float(lt(1, int2bool(input2))))))))
7		57.0		23.0		0.032		23.0		abs_(eq(2, not_(ne(-1, print_do(min_(max_(input3, input2), input1), neg(eq(input2, float2int(0))))))))
8		100.0		23.0		0.05		23.0		abs_(eq(2, not_(ne(-1, print_do(min_(max_(input3, input2), input1), neg(eq(input2, float2int(0))))))))
9		100.0		23.0		0.071		23.0		abs_(eq(2, not_(ne(-1, print_do(min_(max_(input3, input2), input1), neg(eq(input2, float2int(0))))))))
10		100.0		23.0		0.068		23.0		abs_(eq(2, not_(ne(-1, print_do(min_(max_(input3, input2), input1), neg(eq(input2, float2int(0))))))))
11		100.0		23.0		0.084		23.0		abs_(eq(2, not_(ne(-1, print_do(min_(max_(input3, input2), input1), neg(eq(input2, float2int(0))))))))
12		100.0		21.0		0.085		21.0		abs_(le(int2bool(not_(ne(print_do(min_(max_(input3, input2), max_(input1, input2)), neg(2)), mod(input2, int2bool(True))))), input2))
13		100.0		21.0		0.09		21.0		abs_(le(int2bool(not_(ne(print_do(min_(max_(input3, input2), max_(input1, input2)), neg(2)), mod(input2, int2bool(True))))), input2))
14		81.5		19.0		0.081		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
15		80.0		19.0		0.097		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
16		80.0		19.0		0.102		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
17		80.0		19.0		0.086		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
18		79.0		19.0		0.086		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
19		82.0		19.0		0.095		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
20		79.0		19.0		0.102		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
21		75.0		19.0		0.087		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
22		79.0		19.0		0.091		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
23		76.0		19.0		0.094		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
24		78.5		19.0		0.082		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
25		79.0		19.0		0.084		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
26		71.0		19.0		0.094		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
27		76.0		19.0		0.09		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
28		71.0		19.0		0.093		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
29		79.0		19.0		0.09		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
30		67.0		19.0		0.091		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
31		59.5		19.0		0.084		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
32		67.5		19.0		0.087		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
33		58.0		19.0		0.088		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
34		57.0		19.0		0.089		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
35		60.0		19.0		0.08		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
36		60.0		19.0		0.079		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
37		57.0		19.0		0.085		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
38		57.5		19.0		0.087		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
39		57.0		19.0		0.088		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
40		57.0		19.0		0.085		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
41		56.0		19.0		0.083		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
42		56.0		19.0		0.075		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
43		56.0		19.0		0.076		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
44		56.0		19.0		0.077		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
45		55.0		19.0		0.082		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
46		56.0		19.0		0.087		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
47		56.0		19.0		0.082		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
48		56.0		19.0		0.085		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
49		58.0		19.0		0.085		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
50		57.0		19.0		0.068		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
51		58.0		19.0		0.078		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
52		55.0		19.0		0.081		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
53		56.0		19.0		0.077		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
54		56.0		19.0		0.08		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
55		56.0		19.0		0.081		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
56		56.0		19.0		0.083		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
57		56.0		19.0		0.082		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
58		56.0		19.0		0.082		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
59		56.0		19.0		0.084		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
60		56.0		19.0		0.067		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
61		55.0		19.0		0.086		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
62		56.0		19.0		0.091		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
63		56.0		19.0		0.101		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
64		56.0		19.0		0.107		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
65		55.0		19.0		0.091		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
66		59.5		19.0		0.081		19.0		min_(eq(not_(ne(min_(print_do(max_(min_(input1, input2), input3), 2), input2), min_(float2int(pos(34)), 0))), -100), input2)
67		56.0		0.0		0.086		0.0		or_(print_do(max_(min_(max_(input3, input1), input2), min_(input3, input1)), False), ne(0, pos(-1)))
Solution found.
def median(input1, input2, input3):
    return or_(print_do(max_(min_(max_(input3, input1), input2), min_(input3, input1)), False), ne(0, pos(-1)))

Simplifying genome of length 47.
Simplified to length 43.
Simplified to length 40.
Simplified to length 34.
Simplified to length 32.
Simplified to length 30.
Simplified to length 29.
Simplified to length 27.
Simplified to length 26.
Simplified to length 25.
Simplified to length 23.
Simplified to length 22.
Simplified to length 19.
Simplified to length 18.
Simplified to length 17.
Simplified to length 16.
Simplified to length 15.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified genome: length=11 error=0.0
def median(input1, input2, input3):
    return print_do(max_(min_(max_(input3, input1), input2), min_(input3, input1)), False)

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Final Test Error: 0.0
