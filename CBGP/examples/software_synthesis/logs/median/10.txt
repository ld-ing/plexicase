Gen		Median		MAD		Best		Div		Run Best		Code
1		100.0		46.0		0.007		46.0		print_tap(input2)
2		50.0		46.0		0.009		46.0		print_tap(input2)
3		50.0		46.0		0.01		46.0		print_tap(input2)
4		50.0		46.0		0.014		46.0		print_tap(input2)
5		50.0		46.0		0.014		46.0		print_tap(input2)
6		50.0		46.0		0.013		46.0		print_tap(input2)
7		50.0		46.0		0.017		46.0		print_tap(input2)
8		50.0		39.0		0.033		39.0		print_tap(min_(input2, max_(input1, add(input3, 2))))
9		50.0		25.0		0.044		25.0		print_tap(min_(input2, max_(input1, input3)))
10		50.0		25.0		0.054		25.0		print_tap(min_(input2, max_(input1, input3)))
11		51.0		25.0		0.066		25.0		print_tap(min_(input2, max_(input1, input3)))
12		50.0		22.0		0.073		22.0		print_tap(min_(max_(input1, input2), input3))
13		68.0		22.0		0.091		22.0		print_tap(min_(max_(input1, input2), input3))
14		54.5		22.0		0.106		22.0		print_tap(min_(max_(input1, input2), input3))
15		54.0		22.0		0.114		22.0		print_tap(min_(max_(input1, input2), input3))
16		51.0		22.0		0.111		22.0		print_tap(min_(max_(input1, input2), input3))
17		54.0		22.0		0.137		22.0		print_tap(min_(max_(input1, input2), input3))
18		58.0		21.0		0.116		21.0		print_tap(max_(input2, min_(input1, input3)))
19		51.0		21.0		0.105		21.0		print_tap(max_(input2, min_(input1, input3)))
20		51.0		21.0		0.118		21.0		print_tap(max_(input2, min_(input1, input3)))
21		51.0		21.0		0.117		21.0		print_tap(max_(input2, min_(input1, input3)))
22		51.0		21.0		0.118		21.0		print_tap(max_(input2, min_(input1, input3)))
23		55.5		21.0		0.112		21.0		print_tap(max_(input2, min_(input1, input3)))
24		51.0		21.0		0.116		21.0		print_tap(max_(input2, min_(input1, input3)))
25		51.0		21.0		0.105		21.0		print_tap(max_(input2, min_(input1, input3)))
26		51.0		21.0		0.115		21.0		print_tap(max_(input2, min_(input1, input3)))
27		53.0		21.0		0.104		21.0		print_tap(max_(input2, min_(input1, input3)))
28		49.0		21.0		0.101		21.0		print_tap(max_(input2, min_(input1, input3)))
29		51.0		21.0		0.097		21.0		print_tap(max_(input2, min_(input1, input3)))
30		51.0		21.0		0.099		21.0		print_tap(max_(input2, min_(input1, input3)))
31		49.0		21.0		0.111		21.0		print_tap(max_(input2, min_(input1, input3)))
32		47.0		21.0		0.101		21.0		print_tap(max_(input2, min_(input1, input3)))
33		48.0		21.0		0.102		21.0		print_tap(max_(input2, min_(input1, input3)))
34		50.0		21.0		0.095		21.0		print_tap(max_(input2, min_(input1, input3)))
35		48.0		21.0		0.097		21.0		print_tap(max_(input2, min_(input1, input3)))
36		48.0		21.0		0.099		21.0		print_tap(max_(input2, min_(input1, input3)))
37		50.0		21.0		0.095		21.0		print_tap(max_(input2, min_(input1, input3)))
38		49.0		21.0		0.093		21.0		print_tap(max_(input2, min_(input1, input3)))
39		51.0		21.0		0.102		21.0		print_tap(max_(input2, min_(input1, input3)))
40		48.0		21.0		0.094		21.0		print_tap(max_(input2, min_(input1, input3)))
41		50.0		21.0		0.094		21.0		print_tap(max_(input2, min_(input1, input3)))
42		48.0		21.0		0.091		21.0		print_tap(max_(input2, min_(input1, input3)))
43		49.0		21.0		0.095		21.0		print_tap(max_(input2, min_(input1, input3)))
44		49.0		21.0		0.081		21.0		print_tap(max_(input2, min_(input1, input3)))
45		47.0		21.0		0.087		21.0		print_tap(max_(input2, min_(input1, input3)))
46		47.0		21.0		0.083		21.0		print_tap(max_(input2, min_(input1, input3)))
47		46.0		21.0		0.092		21.0		print_tap(max_(input2, min_(input1, input3)))
48		47.0		21.0		0.091		21.0		print_tap(max_(input2, min_(input1, input3)))
49		50.0		21.0		0.09		21.0		print_tap(max_(input2, min_(input1, input3)))
50		49.0		21.0		0.096		21.0		print_tap(max_(input2, min_(input1, input3)))
51		47.0		21.0		0.099		21.0		print_tap(max_(input2, min_(input1, input3)))
52		47.0		21.0		0.085		21.0		print_tap(max_(input2, min_(input1, input3)))
53		46.0		21.0		0.085		21.0		print_tap(max_(input2, min_(input1, input3)))
54		46.0		21.0		0.094		21.0		print_tap(max_(input2, min_(input1, input3)))
55		47.0		21.0		0.086		21.0		print_tap(max_(input2, min_(input1, input3)))
56		47.0		21.0		0.085		21.0		print_tap(max_(input2, min_(input1, input3)))
57		48.0		21.0		0.083		21.0		print_tap(max_(input2, min_(input1, input3)))
58		48.0		21.0		0.087		21.0		print_tap(max_(input2, min_(input1, input3)))
59		47.0		21.0		0.082		21.0		print_tap(max_(input2, min_(input1, input3)))
60		46.0		21.0		0.08		21.0		print_tap(max_(input2, min_(input1, input3)))
61		48.0		21.0		0.075		21.0		print_tap(max_(input2, min_(input1, input3)))
62		46.5		21.0		0.084		21.0		print_tap(max_(input2, min_(input1, input3)))
63		46.0		21.0		0.087		21.0		print_tap(max_(input2, min_(input1, input3)))
64		47.0		21.0		0.077		21.0		print_tap(max_(input2, min_(input1, input3)))
65		46.0		21.0		0.074		21.0		print_tap(max_(input2, min_(input1, input3)))
66		46.0		21.0		0.079		21.0		print_tap(max_(input2, min_(input1, input3)))
67		46.0		21.0		0.079		21.0		print_tap(max_(input2, min_(input1, input3)))
68		47.0		21.0		0.091		21.0		print_tap(max_(input2, min_(input1, input3)))
69		47.0		21.0		0.085		21.0		print_tap(max_(input2, min_(input1, input3)))
70		47.0		21.0		0.073		21.0		print_tap(max_(input2, min_(input1, input3)))
71		46.0		21.0		0.097		21.0		print_tap(max_(input2, min_(input1, input3)))
72		47.0		21.0		0.087		21.0		print_tap(max_(input2, min_(input1, input3)))
73		46.0		21.0		0.084		21.0		print_tap(max_(input2, min_(input1, input3)))
74		47.0		21.0		0.086		21.0		print_tap(max_(input2, min_(input1, input3)))
75		46.0		21.0		0.088		21.0		print_tap(max_(input2, min_(input1, input3)))
76		47.0		21.0		0.088		21.0		print_tap(max_(input2, min_(input1, input3)))
77		46.0		21.0		0.095		21.0		print_tap(max_(input2, min_(input1, input3)))
78		47.0		21.0		0.095		21.0		print_tap(max_(input2, min_(input1, input3)))
79		46.0		21.0		0.093		21.0		print_tap(max_(input2, min_(input1, input3)))
80		48.0		21.0		0.095		21.0		print_tap(max_(input2, min_(input1, input3)))
81		49.5		9.0		0.102		9.0		print_tap(str_(max_(min_(input2, input3), min_(input1, max_(input3, abs_(input2))))))
82		51.0		0.0		0.114		0.0		print_tap(str_(max_(min_(input2, input3), min_(input1, max_(input3, input2)))))
Solution found.
def median(input1, input2, input3):
    return print_tap(str_(max_(min_(input2, input3), min_(input1, max_(input3, input2)))))

Simplifying genome of length 44.
Simplified to length 42.
Simplified to length 39.
Simplified to length 38.
Simplified to length 31.
Simplified to length 30.
Simplified to length 29.
Simplified to length 26.
Simplified to length 24.
Simplified to length 23.
Simplified to length 16.
Simplified to length 15.
Simplified to length 14.
Simplified to length 13.
Simplified to length 12.
Simplified to length 11.
Simplified to length 10.
Simplified genome: length=10 error=0.0
def median(input1, input2, input3):
    return print_tap(max_(min_(input2, input3), min_(input1, max_(input3, input2))))

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Final Test Error: 0.0
