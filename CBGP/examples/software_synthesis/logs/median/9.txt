Gen		Median		MAD		Best		Div		Run Best		Code
1		100.0		42.0		0.009		42.0		print_tap(input3)
2		99.0		42.0		0.016		42.0		print_tap(input3)
3		61.0		42.0		0.021		42.0		print_tap(input3)
4		61.0		42.0		0.025		42.0		print_tap(input3)
5		61.0		42.0		0.04		42.0		print_tap(input3)
6		69.0		40.0		0.052		40.0		abs_(print_tap(min_(abs_(input3), input2)))
7		76.0		40.0		0.069		40.0		abs_(print_tap(min_(abs_(input3), input2)))
8		79.5		40.0		0.077		40.0		abs_(print_tap(min_(abs_(input3), input2)))
9		76.0		40.0		0.082		40.0		abs_(print_tap(min_(abs_(input3), input2)))
10		76.0		40.0		0.097		40.0		abs_(print_tap(min_(abs_(input3), input2)))
11		75.5		40.0		0.109		40.0		abs_(print_tap(min_(abs_(input3), input2)))
12		76.0		40.0		0.117		40.0		abs_(print_tap(min_(abs_(input3), input2)))
13		75.0		40.0		0.137		40.0		abs_(print_tap(min_(abs_(input3), input2)))
14		76.0		30.0		0.155		30.0		abs_(print_tap(min_(max_(input3, input2), input1)))
15		76.0		24.0		0.133		24.0		abs_(print_tap(min_(max_(input3, input1), input2)))
16		79.0		24.0		0.122		24.0		abs_(print_tap(min_(max_(input3, input1), input2)))
17		76.0		24.0		0.136		24.0		abs_(print_tap(min_(max_(input3, input1), input2)))
18		76.0		24.0		0.131		24.0		abs_(print_tap(min_(max_(input3, input1), input2)))
19		79.0		19.0		0.105		19.0		add(print_tap(max_(min_(input3, input1), input2)), input1)
20		97.0		19.0		0.112		19.0		add(print_tap(max_(min_(input3, input1), input2)), input1)
21		97.0		18.0		0.12		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
22		97.0		18.0		0.115		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
23		82.0		18.0		0.128		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
24		83.5		18.0		0.125		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
25		97.0		18.0		0.124		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
26		79.0		18.0		0.143		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
27		76.0		18.0		0.136		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
28		78.5		18.0		0.146		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
29		79.5		18.0		0.146		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
30		81.0		18.0		0.144		18.0		abs_(print_tap(min_(max_(input1, input2), input3)))
31		81.0		0.0		0.132		0.0		print_tap(min_(max_(input3, input1), max_(input2, min_(input3, input1))))
Solution found.
def median(input1, input2, input3):
    return print_tap(min_(max_(input3, input1), max_(input2, min_(input3, input1))))

Simplifying genome of length 60.
Simplified to length 58.
Simplified to length 48.
Simplified to length 44.
Simplified to length 43.
Simplified to length 42.
Simplified to length 41.
Simplified to length 36.
Simplified to length 26.
Simplified to length 24.
Simplified to length 21.
Simplified to length 19.
Simplified to length 18.
Simplified to length 17.
Simplified to length 15.
Simplified to length 14.
Simplified to length 12.
Simplified to length 11.
Simplified to length 10.
Simplified genome: length=10 error=0.0
def median(input1, input2, input3):
    return print_tap(min_(max_(input3, input1), max_(input2, min_(input3, input1))))

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Final Test Error: 0.0
